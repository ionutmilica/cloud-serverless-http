import type { APIGatewayEventClientCertificate, APIGatewayProxyEvent, Context } from 'aws-lambda';

export const v1EventBase: APIGatewayProxyEvent = {
  resource: '/v1/products',
  path: '/v1/products',
  httpMethod: 'POST',
  headers: {
    Accept: '*/*',
    'Content-Type': 'application/json',
    'Accept-Encoding': 'gzip, deflate, br',
    Host: 'my-domain.dev.some-private-host.com',
    'User-Agent': 'PostmanRuntime/7.28.2',
    'X-Amzn-Trace-Id': 'Root=1-6124bd55-xxx',
    'X-Forwarded-For': '177.114.22.212',
    'X-Forwarded-Port': '443',
    'X-Forwarded-Proto': 'https',
  },
  multiValueHeaders: {
    Accept: ['*/*'],
    'Content-Type': ['application/json'],
    'Accept-Encoding': ['gzip, deflate, br'],
    Host: ['my-domain.dev.some-private-host.com'],
    'User-Agent': ['PostmanRuntime/7.28.2'],
    'X-Amzn-Trace-Id': ['Root=1-6124bd55-xxxx'],
    'X-Forwarded-For': ['177.114.22.212'],
    'X-Forwarded-Port': ['443'],
    'X-Forwarded-Proto': ['https'],
  },
  queryStringParameters: { queryParam: '23' },
  multiValueQueryStringParameters: { queryParam: ['22', '23'] },
  pathParameters: null,
  stageVariables: null,
  requestContext: {
    resourceId: '0o1iug',
    authorizer: {
      authorization: 'authorization-token-from-authorizer',
      principalId: 'fd4ae590-f151-4804-b8c0-4919f5dfd149',
      integrationLatency: 1865,
      issuer: 'cognito',
    },
    resourcePath: '/v1/products',
    httpMethod: 'POST',
    extendedRequestId: 'EkKFaEMTjoEFeCA=',
    requestTime: '24/Aug/2021:09:35:17 +0000',
    path: '/v1/products',
    accountId: '891916258803',
    protocol: 'HTTP/1.1',
    stage: 'dev',
    domainPrefix: 'my-domain',
    requestTimeEpoch: 1629797717628,
    requestId: '0b2564a0-98ab-41a9-90fd-7885b435ff18',
    identity: {
      apiKey: '',
      apiKeyId: '',
      clientCert: {} as APIGatewayEventClientCertificate,
      cognitoIdentityPoolId: null,
      accountId: null,
      cognitoIdentityId: null,
      caller: null,
      sourceIp: '79.102.5.208',
      principalOrgId: null,
      accessKey: null,
      cognitoAuthenticationType: null,
      cognitoAuthenticationProvider: null,
      userArn: null,
      userAgent: 'PostmanRuntime/7.28.2',
      user: null,
    },
    domainName: 'my-domain.dev.some-private-host.com',
    apiId: 'll5fiaj4z5',
  },
  body: '{\n    "title": "My product"\n}',
  isBase64Encoded: false,
};

export const defaultContext: Context = {
  callbackWaitsForEmptyEventLoop: true,
  functionName: '',
  functionVersion: '',
  invokedFunctionArn: '',
  memoryLimitInMB: '256',
  awsRequestId: '',
  logGroupName: '',
  logStreamName: '',
  getRemainingTimeInMillis: () => 1,
  done(error?: Error, result?: any): void {},
  fail(error: Error | string): void {},
  succeed(messageOrObject: any): void {},
};

export function makeV1Event(
  cb: (event: APIGatewayProxyEvent) => APIGatewayProxyEvent,
): APIGatewayProxyEvent {
  return cb(JSON.parse(JSON.stringify(v1EventBase)));
}
